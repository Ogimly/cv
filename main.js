(()=>{"use strict";(()=>{const e={item0:{id:"virtual-keyboard",title:"Virtual keyboard",description:"You should to create a virtual keyboard:",descriptionList:{item0:"all the necessary elements are generated with the usage of JS",item1:"pressing a key on a physical keyboard highlights the key on the virtual keyboard",item2:"keystrokes are animated",item3:"the virtual keyboard is able to switch between two language layouts",item4:"clicks on the buttons with a mouse on the virtual keyboard and pressing keys on a physical keyboard should input symbols to the text area located on the page above the virtual keyboard"},descriptionLink:"https://github.com/rolling-scopes-school/tasks/blob/master/tasks/virtual-keyboard/virtual-keyboard-en.md",repositoryLink:"https://github.com/ogimly/virtual-keyboard",deployLink:"https://ogimly.github.io/virtual-keyboard",imgLink:"https://user-images.githubusercontent.com/101447709/172424633-a083e1e2-9664-453e-89d4-7727044e4339.png",imgAlt:"Virtual keyboard screen",learn:"In this task, I learned:",learnList:{item0:"generation of elements in DOM",item1:"handling and catching events",item2:"installing and configuring Webpack",item3:"installing and configuring ESLint and Prettier",item4:"writing a Pull Request wish guideline"}},item1:{id:"shelter",title:"Shelter",description:"Shelter is a project in which you have to design a site consisting of two pages, make it adaptive and interactive:",descriptionList:{item0:"Fixed layout of main and pets pages. At this stage, you have to create a fixed layout of two pages. With a fixed layout, the pages look the same if the window width is at least 1280px.",item1:"Adding layout adaptability. At this stage, you have to adapt the previously created pages according to the layout for different window widths up to 320px inclusive.",item2:"Adding additional functionality. At this stage, additional functionality is added to the previously made pages: slider, pagination, popup."},descriptionLink:"https://github.com/rolling-scopes-school/tasks/tree/master/stage1/stream1/shelter",repositoryLink:"https://github.com/ogimly/shelter",deployLink:"https://ogimly.github.io/shelter",imgLink:"https://user-images.githubusercontent.com/101447709/172419221-0a25fe26-f05e-4a48-ad16-026ffb4304d2.png",imgAlt:"Shelter screen",learn:"In this task, I learned:",learnList:{item0:"working with project in Figma",item1:"styling wits CSS, checking PerfectPixel",item2:"using SCSS preprocessor and 7-1 pattern",item3:"adaptive and responsive layout",item4:"adding base functionality in JS"}}},t=(e,t)=>{const i=document.createElement("p");i.className="text tasks-section__text",i.innerHTML=t,e.appendChild(i)},i=(e,t)=>{const i=document.createElement("ul");i.className="tasks-section__list",e.appendChild(i),Object.values(t).forEach((e=>{const t=document.createElement("li");t.className="tasks-section__item",t.innerHTML=e,i.appendChild(t)}))},a=(e,t,i)=>{const a=document.createElement("a");a.className="tasks-section__link",a.target="_blank",a.href=i,a.innerHTML=t,e.appendChild(a)},s=()=>{const s=document.getElementById("task-list");s&&((e,t)=>{const i=document.createElement("ul");i.className="sidebar-section__list",e.appendChild(i),Object.values(t).forEach((e=>{const t=document.createElement("li");t.className="sidebar-section__item tasks__item";const a=document.createElement("a");a.className="sidebar-section__link task-list__item",a.href=`#${e.id}`,a.innerHTML=e.title,t.appendChild(a),i.appendChild(t)}))})(s,e);const n=document.getElementById("tasks");n&&((e,s)=>{Object.values(s).forEach((s=>{const n=document.createElement("section");n.className=`tasks-section ${s.id}`,n.id=s.id;const o=document.createElement("h2");o.className="title tasks-section__title",o.innerHTML=`${s.title}:`,n.appendChild(o),t(n,s.description);let l=s.descriptionList;i(n,l);const r=document.createElement("nav");r.className="tasks-section__nav",n.appendChild(r),a(r,"Full description",s.descriptionLink),a(r,"View repository",s.repositoryLink),a(r,"Open deploy",s.deployLink),((e,t,i)=>{const a=document.createElement("img");a.className="tasks__img",a.src=i,a.alt=t,e.appendChild(a)})(n,s.imgAlt,s.imgLink),t(n,s.learn),l=s.learnList,i(n,l),e.appendChild(n)}))})(n,e)};window.onload=()=>{(()=>{const e=document.getElementById("burger");e&&e.addEventListener("click",(()=>{e.classList.toggle("burger_open")})),document.querySelectorAll(".nav__item").forEach((t=>{t.addEventListener("click",(()=>{e.classList.remove("burger_open")}))}))})(),s()}})()})();